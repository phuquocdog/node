[package]
name = "phuquocdog-node"
version = "3.0.0"
authors = ["Phu Quoc Dog <https://phuquoc.dog>"]
description = "Phuquocdog main blockchain"
edition = "2018"
license = "Apache2"
build = "build.rs"
homepage = "https://phuquoc.dog"
repository = "https://github.com/phuquocdog/node"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "phuquocdog-node"


[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
array-bytes = "4.1"
clap = { version = "4.0.9", features = ["derive"], optional = true }
codec = { package = "parity-scale-codec", version = "3.2.2" }
serde = { version = "1.0.136", features = ["derive"] }
jsonrpsee = { version = "0.16.2", features = ["server"] }
futures = "0.3.21"
log = "0.4.17"
rand = "0.8"

# primitives
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
grandpa-primitives = { workspace = true }
sp-api = { workspace = true }
sp-core = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-inherents = { workspace = true }
sp-keyring = { workspace = true }
sp-keystore = { workspace = true }
sp-consensus = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
sp-io = { workspace = true }

# client dependencies
sc-client-api = { workspace = true }
sc-chain-spec = { workspace = true }
sc-consensus = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-network-sync = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-babe = { workspace = true }
grandpa = { workspace = true }
sc-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-executor = { workspace = true }
sc-authority-discovery = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sc-sysinfo = { workspace = true }
sc-storage-monitor = { workspace = true}

# frame dependencies
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-assets = { workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-im-online = { workspace = true}

# node-specific dependencies
kitchensink-runtime = { workspace = true}
node-rpc = { workspace = true }
node-primitives = { workspace = true }
node-executor = { workspace = true }

# CLI-specific dependencies
sc-cli = { workspace = true }
frame-benchmarking-cli = { workspace = true, optional = true }
node-inspect = {  optional = true, workspace = true}
try-runtime-cli = {  optional = true, workspace = true }
serde_json = "1.0.85"

[dev-dependencies]
sc-keystore = { workspace = true }
sc-client-db = { workspace = true}
sc-consensus = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-epochs = { workspace = true }
sc-service-test = { workspace = true }
sc-block-builder = { workspace = true }
sp-tracing = { workspace = true }
sp-blockchain = { workspace = true }
futures = "0.3.21"
tempfile = "3.1.0"
assert_cmd = "2.0.2"
nix = { version = "0.26.1", features = ["signal"] }
serde_json = "1.0"
regex = "1.6.0"
platforms = "2.0"
soketto = "0.7.1"
criterion = { version = "0.4.0", features = ["async_tokio"] }
tokio = { version = "1.22.0", features = ["macros", "time", "parking_lot"] }
tokio-util = { version = "0.7.4", features = ["compat"] }
wait-timeout = "0.2"
substrate-rpc-client = { workspace = true }
pallet-timestamp = { workspace = true }
substrate-cli-test-utils = { workspace = true }

[build-dependencies]
clap = { version = "4.0.9", optional = true }
clap_complete = { version = "4.0.2", optional = true }
node-inspect = { workspace = true }
frame-benchmarking-cli = { workspace = true }
substrate-build-script-utils = {optional = true, workspace = true }
substrate-frame-cli = { workspace = true, optional = true }
try-runtime-cli = { optional = true, workspace = true }
sc-cli = { workspace = true, optional = true }
pallet-balances = { workspace = true }
sc-storage-monitor = { workspace = true }

[features]
default = ["cli"]
cli = [
	"node-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/rocksdb",
	"clap",
	"clap_complete",
	"substrate-build-script-utils",
	"try-runtime-cli",
]
runtime-benchmarks = [
	"kitchensink-runtime/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks"
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = ["kitchensink-runtime/try-runtime", "try-runtime-cli/try-runtime"]

